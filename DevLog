DevLog

Acknowledgements:

http://www.alessioatzeni.com/meteocons/ - Weather Icons

-

The app pulls data from a single source. It should handle background updates so that relevant data is present whenever the user opens the app, even if they're in a mobile dead zone. I don't think there's a need to use Core Data since the data structure provided is pretty simple and uninteractive.

I'm not experience with AutoLayout or Storyboards, but since they're requirements we'll take a stab at it. A Master-Detail template seems like the best way to get started rather than building one from scratch. We can innovate in the 'detail' view.

We'll start with building the model.

-

Took a really long time to built the TM_Venue class, which I'm going to blame on a) using swift, b) optionals being a bit odd and c) a misplaced underscore.

I think I'll add an init class to it that causes it to build from dictionary and it'll be fine. This'll be enough to start loading things into the tableView. I considered splitting the 'country' stuff out, and having a data model of Countries containing Venues containing associated weather data. Might do that when I'm cludging together code to grab and store data.

-

I should probably store venue/country IDs as strings everywhere since I'm using the string from the feed as a dictionary key.

Implemented sort filter. I'm sure I didn't need to hardcode the cells in the storyboard tableview *and* create an NS_ENUM to map indexpaths to access them, surely there's some identifier value I could've used? But this is pretty easy to work with.

I ended up doing nested tableviews for the filtering. I guess I'd prefer to have used an actionsheet-like widget for those, but here we are instead. Still a couple tweaks needed here.

Tomorrow I'll do what's left of the filtering, then..

- User Refresh
- Pretty up the table view cells
- Get around to actually displaying some data in the detailVC

-

Finished prettying up the table view cells and did enough figuring out icons from the list given + what I could see in the feed.

It seems pretty much necessary to me to have a hardcoded set of icons for things like this. 

-

Ok, I think I hit all the requirements and it only took forever.

There's no terrible interesting UI stuff, though. It's pretty much a bog-standard table-shows-data app. I don't really use storyboard so just doing ordinary stuff took a fair whack of time to get right. I'm gonna play with the app for a while and make sure what I've got hangs together before trying to apply some design. I'd like to, let's see...

- Include controls to select metrics (kmh/mph, celsius/fahrenheit/etc. some of the code is even there!)

- Add some backgrounds, or background colour, and tweak the fonts. I'm thinking colours based on temperature would be bestest.

- Animations when the detail view changes.

- Apply a transform to the wind compass so it points in the correct direction.

- Store user preferences, e.g. last search, last venue. A bit of persistence would be nice.

- It's probably pretty silly to store country_ID and country_name in TM_Venue like I did.

- Add tests around filtering and sorting.

- Use the default storyboard size. I think my constraints do hit every possible device, but it is giving a few warnings in interface builder.

- Using 'clear' as the default weather icon is a bit suss, I think a question mark would be better.

- Pop-Up Picker Views instead of table views for sort filtering.

- Better failure checking when fetching data (app waits some time before reporting back to user.)


-

Didn't handle network failure properly (wasn't removing request reference.)

